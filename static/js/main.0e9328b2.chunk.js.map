{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/Errorboundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","Errorboundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,EAfF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAE3B,OACC,sBAAKC,UAAY,sDAAjB,UACC,qBAAKC,IAAK,SAASC,IAAG,+BAA2BH,KACjD,gCACA,+BAAKF,EAAL,OACA,kCAAKC,EAAL,cCcYK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAElB,OACC,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GACtB,OACA,cAAC,EAAD,CAECR,GAAKK,EAAOG,GAAGR,GACfF,KAAMO,EAAOG,GAAGV,KAChBC,MAAQM,EAAOG,GAAGT,OAHZS,SCMMC,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKV,UAAW,MAAhB,SACA,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCGGI,G,MAXF,SAACC,GACb,OACC,qBAAKC,MAAQ,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACCJ,EAAMK,aCqBMC,E,kDAvBd,WAAYN,GAAQ,IAAD,8BAClB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHO,E,8DAODC,EAAOC,GACxBC,KAAKC,SAAS,CAAEJ,UAAU,M,+BAK1B,OAAIG,KAAKJ,MAAMC,SACP,6DAIDG,KAAKX,MAAMK,a,GAnBQQ,aCoDbC,E,kDA3Cd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAAElB,YAAasB,EAAMC,OAAOC,SAb1C,EAAKX,MAAQ,CACZlB,OAAQ,GACRK,YAAa,IAJD,E,gEAQO,IAAD,OACnByB,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACvB,OAAQkC,S,+BAS9B,IAAD,EACsBZ,KAAKJ,MAA5BlB,EADC,EACDA,OAAQK,EADP,EACOA,YACT8B,EAAiBnC,EAAOoC,QAAO,SAAAC,GACpC,OAAOA,EAAM5C,KAAK6C,cAAcC,SAASlC,EAAYiC,kBAEtD,OAAQtC,EAAOwC,OAId,sBAAK5C,UAAW,KAAhB,UACC,oBAAIA,UAAW,KAAf,2BACA,cAAC,EAAD,CAAWU,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAU1B,OAAQmC,WARrB,+C,GA3BeX,aCEHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0e9328b2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\r\n\treturn (\r\n\t\t<div className = 'tc bg-light-green dib br2 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt= 'robots' src= {`https://robohash.org/${id}`} />\r\n\t\t\t<div>\r\n\t\t\t<h2>{name} </h2>\r\n\t\t\t<p> {email} </p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t);\r\n\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../components/Card';\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n\treturn (\r\n\t <div>\r\n\t \t{\r\n     \trobots.map((user, i) => {\r\n\t\treturn (\r\n\t\t<Card \r\n\t\t\tkey= {i} \r\n\t\t\tid={ robots[i].id} \r\n\t\t\tname={robots[i].name} \r\n\t\t\temail= {robots[i].email} \r\n\t\t\t/>\r\n\t\t);\r\n\t\t})\r\n     }\r\n     </div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\n\treturn (\r\n\t\t<div className= 'pa2'>\r\n\t\t<input \r\n\t\tclassName='pa3 ba b--green bg-lightest-blue'\r\n\t\ttype='search' \r\n\t\tplaceholder='search robots' \r\n\t\tonChange={searchChange}\r\n\t\t/>\t\r\n\t\t\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nconst Scroll=(props) => {\r\n\treturn (\r\n\t\t<div style= {{overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n\t\t{props.children}\r\n\r\n\t\t</div>\r\n\r\n\r\n\t\t);\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass Errorboundary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info) {\r\n\t\tthis.setState({ hasError: true})\r\n\r\n\t}\r\n\r\n\trender () {\r\n\t\tif (this.state.hasError) {\r\n\t\t\treturn <h1> Ooooops. That is not good </h1>\r\n\r\n\t\t}\r\n\t\r\n\t\treturn this.props.children\r\n\t}\r\n\r\n}\r\n\r\nexport default Errorboundary;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\n//import { robots } from '../components/robots';\r\nimport '../containers/App.css'\r\nimport Scroll from '../components/Scroll';\r\nimport Errorboundary from '../components/Errorboundary';\r\n\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\trobots: [],\r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t\t.then(response => response.json())\r\n\t\t\t.then(users => this.setState({robots: users}));\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({ searchfield: event.target.value })\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst {robots, searchfield} = this.state;\r\n\t\tconst filteredRobots = robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t\t\t})\r\n\t\treturn !robots.length ?\r\n\t\t <h1> Loading </h1> :\r\n\r\n\t\t(\r\n\t\t\t<div className= 'tc'>\r\n\t\t\t\t<h1 className= 'f1'> RoboFriends </h1>\r\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t<Scroll>\r\n\t\t\t\t <Errorboundary>\r\n\t\t\t\t  <CardList robots={filteredRobots} />\r\n\t\t\t\t </Errorboundary>\r\n\t\t\t\t</Scroll>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\t\r\n\t\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}